# Default config for sway
#
# Copy this to ~/.config/sway/config and edit it to your liking.
#
# Read `man 5 sway` for a complete reference.

### Variables
#
# Logo key. Use Mod1 for Alt.
set $mod Mod4

# Your preferred terminal emulator
set $term foot
# Your preferred application launcher
# Note: pass the final command to swaymsg so that the resulting window can be opened
# on the original workspace that the command was run on.
set $menu wofi --show=drun
set $menuAll wofi --show=run

#clipboard fix
#exec wl-paste -t text --watch clipman store --max-items=1 --no-persist
#bindsym $mod+Insert exec clipman pick --tool=wofi
#bindsym $mod+Delete exec clipman clear --tool=wofi
#bindsym $mod+Shift+Delete exec clipman clear --all

#exec bluetooth off

# Fix Zoom
#
# For pop up notification windows that don't use notifications api
#for_window [app_id="zoom" title="^zoom$"] border none, floating enable
# For specific Zoom windows
#for_window [app_id="zoom" title="^(Zoom|About)$"] border pixel, floating enable
#for_window [app_id="zoom" title="Settings"] floating enable, floating_minimum_size 960 x 700
# Open Zoom Meeting windows on a new workspace (a bit hacky)
#for_window [app_id="zoom" title="Zoom Meeting(.*)?"] workspace next_on_output --create, move container to workspace current, floating disable, inhibit_idle open

#for_window [title=".*"]
default_border pixel
hide_edge_borders --i3 smart_no_gaps

# exit dialogue
set $mode_system System (e)xit, (s)leep, (h)ibernate, (r)eboot, (p)oweroff, (l)ock, (L)ogout
mode "$mode_system" {
    bindsym e exec swaymsg exit, mode "default"
    bindsym r exec systemctl reboot, mode "default"
    bindsym p exec systemctl poweroff, mode "default"
    bindsym s exec systemctl suspend, mode "default"
    bindsym h exec systemctl hibernate, mode "default"
    bindsym l exec swaylock -f, mode "default"
    bindsym Shift+l exec loginctl terminate-user "$USER", mode "default"  

    # back to normal: Enter or Escape
    bindsym Return mode "default"
    bindsym Escape mode "default"
}

bindsym $mod+Shift+x mode "$mode_system"

include /etc/sway/config-vars.d/*

### Output configuration
#
# Default wallpaper (more resolutions are available in /usr/share/backgrounds/sway/)
# output * bg /usr/share/backgrounds/sway/Sway_Wallpaper_Blue_1920x1080.png fill
#
# Example configuration:
#
#   output HDMI-A-1 resolution 1920x1080 position 1920,0
#
# You can get the names of your outputs by running: swaymsg -t get_outputs

### Idle configuration
#
# Example configuration:
#
exec swayidle -w \
         timeout 300 'swaylock -f' \
         timeout 10 'if pgrep swaylock; then swaymsg "output * dpms off"; fi' resume 'swaymsg "output * dpms on"' \
         timeout 600 'swaymsg "output * dpms off"' resume 'swaymsg "output * dpms on"' \
         before-sleep 'swaylock -f'
bindsym $mod+l exec swaylock -f

# enable screen sharing
exec /usr/libexec/xdg-desktop-portal -r & /usr/libexec/xdg-desktop-portal-wlr

#
# This will lock your screen after 300 seconds of inactivity, then turn oFailed to launch child: 2023 ff
# your displays after another 300 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.

### Input configuration
#
# Example configuration:
#
#   input "2:14:SynPS/2_Synaptics_TouchPad" {
#       dwt enabled
#       tap enabled
#       natural_scroll enabled
#       middle_emulation enabled
#   }
#
# You can get the names of your inputs by running: swaymsg -t get_inputs
# Read `man 5 sway-input` for more information about this section.

input type:keyboard {
    xkb_layout "us"
    xkb_variant "altgr-intl"
    xkb_options "compose:rctrl"
    repeat_rate 50
}

input type:touchpad {
  dwt enabled
  tap enabled
  scroll_method two_finger
  pointer_accel 0.5
  accel_profile adaptive
}

input "1267:27:Elan_TrackPoint" {
  accel_profile flat
  pointer_accel 0.75
} 


### Key bindings
#
# Basics:
#
    # Start a terminal
    bindsym $mod+Return exec $term
    # bindsym $mod+n exec \
    #     NNN_OPTS="H" \
    #     NN_OPTS="deH" \
    #     LC_COLLATE="C" \
    #     NNN_FIFO="/tmp/nnn.fifo" \
    #     NNN_FCOLORS="AAAAE631BBBBCCCCDDDD9999" \
    #     NNN_PLUG='p:preview-tui' \
    #     SPLIT='v' \
    #     kitty nnn -de

    bindsym $mod+Shift+Return exec brave-browser

    #exec_always thunar --daemon
    bindsym $mod+t exec pcmanfm

    # Kill focused window
    bindsym $mod+Shift+q kill

    # Start your launcher
    bindsym $mod+d exec $menu
    bindsym $mod+Shift+d exec $menuAll

    # Drag floating windows by holding down $mod and left mouse button.
    # Resize them with right mouse button + $mod.
    # Despite the name, also works for non-floating windows.
    # Change normal to inverse to use left mouse button for resizing and right
    # mouse button for dragging.
    floating_modifier $mod normal

    # Reload the configuration file
    bindsym $mod+Shift+c reload

    # Exit sway (logs you out of your Wayland session)
    bindsym $mod+Shift+e exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -b 'Yes, exit sway' 'swaymsg exit'

    # Volume keys
    bindsym --locked --no-repeat XF86AudioMicMute exec pactl set-source-mute @DEFAULT_SOURCE@ toggle
    bindsym --locked --no-repeat XF86AudioMute exec pactl set-sink-mute @DEFAULT_SINK@ toggle
    bindsym --locked XF86AudioRaiseVolume exec pactl set-sink-mute @DEFAULT_SINK@ 0 && pactl set-sink-volume @DEFAULT_SINK@ +5%
    bindsym --locked XF86AudioLowerVolume exec pactl set-sink-mute @DEFAULT_SINK@ 0 && pactl set-sink-volume @DEFAULT_SINK@ -5%

    # Brightness control
    bindsym --locked XF86MonBrightnessUp exec light -T 1.4
    bindsym --locked XF86MonBrightnessDown exec light -T 0.72

#
# Moving around:
#
    # Move your focus around
#    bindsym $mod+$left focus left
#    bindsym $mod+$down focus down
#    bindsym $mod+$up focus up
#    bindsym $mod+$right focus right
    # Or use $mod+[up|down|left|right]
    bindsym $mod+Left focus left
    bindsym $mod+Down focus down
    bindsym $mod+Up focus up
    bindsym $mod+Right focus right

    # Move the focused window with the same, but add Shift
#    bindsym $mod+Shift+$left move left
#    bindsym $mod+Shift+$down move down
#    bindsym $mod+Shift+$up move up
#    bindsym $mod+Shift+$right move right
    # Ditto, with arrow keys
    bindsym $mod+Shift+Left move left
    bindsym $mod+Shift+Down move down
    bindsym $mod+Shift+Up move up
    bindsym $mod+Shift+Right move right
#
# Workspaces:
#
    # Switch to workspace
    bindsym $mod+1 workspace number 1
    bindsym $mod+2 workspace number 2
    bindsym $mod+3 workspace number 3
    bindsym $mod+4 workspace number 4
    bindsym $mod+5 workspace number 5
    bindsym $mod+6 workspace number 6
    bindsym $mod+7 workspace number 7
    bindsym $mod+8 workspace number 8
    bindsym $mod+9 workspace number 9
    bindsym $mod+0 workspace number 10

    bindsym $mod+Ctrl+Left workspace prev
    bindsym $mod+Ctrl+Right workspace next

    # Move focused container to workspace
    bindsym $mod+Shift+1 move container to workspace number 1
    bindsym $mod+Shift+2 move container to workspace number 2
    bindsym $mod+Shift+3 move container to workspace number 3
    bindsym $mod+Shift+4 move container to workspace number 4
    bindsym $mod+Shift+5 move container to workspace number 5
    bindsym $mod+Shift+6 move container to workspace number 6
    bindsym $mod+Shift+7 move container to workspace number 7
    bindsym $mod+Shift+8 move container to workspace number 8
    bindsym $mod+Shift+9 move container to workspace number 9
    bindsym $mod+Shift+0 move container to workspace number 10

    bindsym $mod+Shift+Ctrl+Left move container to workspace prev, workspace prev
    bindsym $mod+Shift+Ctrl+Right move container to workspace next, workspace next
    # Note: workspaces can have any name you want, not just numbers.
    # We just use 1-10 as the default.
#
# Layout stuff:
#
    # You can "split" the current object of your focus with
    # $mod+b or $mod+v, for horizontal and vertical splits
    # respectively.
    bindsym $mod+h splith
    bindsym $mod+v splitv

    # Switch the current container between different layout styles
    bindsym $mod+s layout stacking
    bindsym $mod+w layout tabbed
    bindsym $mod+e layout toggle split

    # Make the current focus fullscreen
    bindsym $mod+f fullscreen

    # Toggle the current focus between tiling and floating mode
    bindsym $mod+Shift+space floating toggle

    # Swap focus between the tiling area and the floating area
    bindsym $mod+space focus mode_toggle

    # Move focus to the parent container
    bindsym $mod+a focus parent
#
# Scratchpad:
#
    # Sway has a "scratchpad", which is a bag of holding for windows.
    # You can send windows there and get them back later.

    # Move the currently focused window to the scratchpad
    bindsym $mod+Shift+minus move scratchpad

    # Show the next scratchpad window or hide the focused scratchpad window.
    # If there are multiple scratchpad windows, this command cycles through them.
    bindsym $mod+minus scratchpad show
#
# Resizing containers:
#
mode "resize" {
    # left will shrink the containers width
    # right will grow the containers width
    # up will shrink the containers height
    # down will grow the containers height
#    bindsym $left resize shrink width 10px
#    bindsym $down resize grow height 10px
#    bindsym $up resize shrink height 10px
#    bindsym $right resize grow width 10px

    # Ditto, with arrow keys
    bindsym Left resize shrink width 10px
    bindsym Down resize grow height 10px
    bindsym Up resize shrink height 10px
    bindsym Right resize grow width 10px

    # Return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+r mode "resize"

bindsym Print exec grim -o \
  $(swaymsg -t get_outputs | jq -r '.[] | select(.focused) | .name') \
  $(xdg-user-dir PICTURES)/screenshots/$(date +'screenshot_%Y%m%d_%H%M%S.png') 

exec_always nm-applet --indicator

bar {
  swaybar_command waybar
}

#
# Status Bar:
#
# Read `man 5 sway-bar` for more information about this section.
#bar {
#    position top
#
#    tray {
#    }
#
    # When the status_command prints a new line to stdout, swaybar updates.
    # The default just shows the current date and time.
#    status_command while date +'%Y-%m-%d %l:%M:%S %p'; do sleep 1; done
#
#    colors {
#        statusline #ffffff
#        background #323232
#        inactive_workspace #32323200 #32323200 #5c5c5c
#    }
#}

include /etc/sway/config.d/*
